def calculate_required_torque(load_force, radius_of_wheel):
    """
    Calculate the torque required to overcome the load force, facilitating uphill movement.
    """
    return load_force * radius_of_wheel


def calculate_pedaling_contribution(pedaling_power, radius_of_wheel, speed):
    """
    Calculate the additional torque from pedaling based on the pedaling power.
    This function assumes the pedaling power contributes directly to the bike's motion
    by increasing the total torque applied to the wheel. The angular velocity is derived
    from the linear speed and wheel radius, allowing for the conversion of pedaling power
    (in Watts) to mechanical torque (in Newton-meters).

    :param pedaling_power: Power generated by the user through pedaling in Watts.
                           This is an estimated average value that a user can sustain.
    :param radius_of_wheel: Radius of the wheel in meters, affecting the conversion
                            from angular to linear motion.
    :param speed: The linear speed of the bike in meters per second, used to calculate
                  the wheel's angular velocity.
    :return: Additional torque from pedaling in Newton-meters, contributing to the
             total torque required to overcome the load force and move the bike.
    """
    # Calculate the angular velocity from the linear speed
    angular_velocity = speed / radius_of_wheel
    # Calculate the torque contribution from pedaling
    torque_from_pedaling = pedaling_power / angular_velocity
    return torque_from_pedaling
